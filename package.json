{
  "name": "love-claude-code",
  "version": "0.1.0",
  "description": "AI-first development platform that transforms conversations into code",
  "author": "Love Claude Code Team",
  "license": "MIT",
  "private": true,
  "homepage": "https://love-claude-code.dev",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/love-claude-code/love-claude-code.git"
  },
  "bugs": {
    "url": "https://github.com/love-claude-code/love-claude-code/issues"
  },
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=9.0.0"
  },
  "workspaces": [
    "frontend",
    "backend",
    "infrastructure",
    "mcp-server",
    "packages/*"
  ],
  "scripts": {
    "dev": "concurrently \"npm run dev:frontend\" \"npm run dev:backend\" \"npm run mcp-ui:dev\"",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:backend": "cd backend && npm run dev",
    "dev:infra": "cd infrastructure && npm run dev",
    "mcp-ui:build": "cd mcp-server && npm run build",
    "mcp-ui:dev": "cd mcp-server && npm run dev",
    "mcp-ui:start": "cd mcp-server && npm run start",
    "build": "npm run build:frontend && npm run build:backend",
    "build:frontend": "cd frontend && npm run build",
    "build:backend": "cd backend && npm run build",
    "build:docker": "docker-compose build",
    "start": "concurrently \"npm run start:frontend\" \"npm run start:backend\"",
    "start:frontend": "cd frontend && npm run start",
    "start:backend": "cd backend && npm run start",
    "test": "npm run test:frontend && npm run test:backend",
    "test:frontend": "cd frontend && npm test",
    "test:backend": "cd backend && npm test",
    "test:e2e": "playwright test",
    "test:watch": "jest --watch",
    "lint": "npm run lint:frontend && npm run lint:backend",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:backend": "cd backend && npm run lint",
    "lint:fix": "npm run lint:frontend:fix && npm run lint:backend:fix",
    "lint:frontend:fix": "cd frontend && npm run lint:fix",
    "lint:backend:fix": "cd backend && npm run lint:fix",
    "format": "prettier --write \"**/*.{js,jsx,ts,tsx,json,css,scss,md}\"",
    "format:check": "prettier --check \"**/*.{js,jsx,ts,tsx,json,css,scss,md}\"",
    "type-check": "npm run type-check:frontend && npm run type-check:backend",
    "type-check:frontend": "cd frontend && npm run type-check",
    "type-check:backend": "cd backend && npm run type-check",
    "clean": "npm run clean:frontend && npm run clean:backend && npm run clean:root",
    "clean:frontend": "cd frontend && rm -rf dist node_modules .next",
    "clean:backend": "cd backend && rm -rf dist node_modules",
    "clean:root": "rm -rf node_modules",
    "setup": "npm install && npm run setup:env && npm run setup:db",
    "setup:env": "cp .env.example .env.local",
    "setup:db": "cd backend && npm run db:migrate && npm run db:seed",
    "db:start": "docker-compose up -d postgres redis",
    "db:stop": "docker-compose stop postgres redis",
    "db:migrate": "cd backend && npm run db:migrate",
    "db:seed": "cd backend && npm run db:seed",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:dev": "docker-compose -f docker-compose.dev.yml up",
    "deploy:dev": "npm run build && cd infrastructure && npm run deploy:dev",
    "deploy:staging": "npm run build && cd infrastructure && npm run deploy:staging",
    "deploy:prod": "npm run build && cd infrastructure && npm run deploy:prod",
    "deploy:rollback": "cd infrastructure && npm run deploy:rollback",
    "infra:diff": "cd infrastructure && cdk diff",
    "infra:deploy": "cd infrastructure && cdk deploy",
    "infra:destroy": "cd infrastructure && cdk destroy",
    "check-all": "npm run lint && npm run type-check && npm run test && npm run format:check",
    "prepare": "husky install",
    "postinstall": "npm run prepare",
    "security:audit": "npm audit --production",
    "security:fix": "npm audit fix",
    "security:check": "snyk test",
    "analyze": "npm run analyze:frontend && npm run analyze:backend",
    "analyze:frontend": "cd frontend && npm run analyze",
    "analyze:backend": "cd backend && npm run analyze",
    "generate:component": "plop component",
    "generate:api": "plop api-endpoint",
    "docs:dev": "cd docs && npm run dev",
    "docs:build": "cd docs && npm run build",
    "docs:serve": "cd docs && npm run serve"
  },
  "devDependencies": {
    "@commitlint/cli": "^18.4.3",
    "@commitlint/config-conventional": "^18.4.3",
    "@playwright/test": "^1.40.1",
    "@types/jest": "^29.5.11",
    "@types/node": "^20.10.5",
    "@typescript-eslint/eslint-plugin": "^6.15.0",
    "@typescript-eslint/parser": "^6.15.0",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jest": "^27.6.0",
    "eslint-plugin-prettier": "^5.1.2",
    "eslint-plugin-react": "^7.33.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "lint-staged": "^15.2.0",
    "plop": "^4.0.0",
    "prettier": "^3.1.1",
    "snyk": "^1.1266.0",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.2",
    "typescript": "^5.3.3"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,css,scss,md}": [
      "prettier --write"
    ]
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "keywords": [
    "ide",
    "ai",
    "claude",
    "development",
    "platform",
    "react",
    "typescript",
    "aws",
    "serverless"
  ]
}